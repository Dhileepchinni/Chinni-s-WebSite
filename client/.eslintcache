[{"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\index.js":"1","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\App.js":"3","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\layout\\Navbar.js":"4","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\layout\\Landing.js":"5","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\auth\\Register.js":"6","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\auth\\Login.js":"7","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\store.js":"8","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\reducers\\index.js":"9","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\reducers\\alert.js":"10","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\actions\\types.js":"11","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\actions\\alert.js":"12","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\layout\\Alert.js":"13","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\actions\\auth.js":"14","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\reducers\\auth.js":"15","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\utils\\setAuthToken.js":"16","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\dashboard\\Dashboard.js":"17","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\routing\\PrivateRoute.js":"18","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\reducers\\profile.js":"19","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\actions\\profile.js":"20","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\layout\\spinner.js":"21","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\dashboard\\DashboardActions.js":"22","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile-forms\\AddExperience.js":"23","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile-forms\\AddEducation.js":"24","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\dashboard\\Experience.js":"25","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\dashboard\\Education.js":"26","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profiles\\Profiles.js":"27","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profiles\\ProfileItem.js":"28","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\layout\\Spinner.js":"29","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile-forms\\CreateProfile.js":"30","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile-forms\\EditProfile.js":"31","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\reducers\\post.js":"32","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile\\Profile.js":"33","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\posts\\Posts.js":"34","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\post\\Post.js":"35","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile\\ProfileEducation.js":"36","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile\\ProfileExperience.js":"37","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile\\ProfileGithub.js":"38","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\actions\\post.js":"39","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile\\ProfileAbout.js":"40","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\posts\\PostItem.js":"41","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\posts\\PostForm.js":"42","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile\\ProfileTop.js":"43","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\post\\CommentItem.js":"44","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\post\\CommentForm.js":"45"},{"size":145,"mtime":1610399204527,"results":"46","hashOfConfig":"47"},{"size":362,"mtime":499162500000,"results":"48","hashOfConfig":"47"},{"size":2854,"mtime":1610399172231,"results":"49","hashOfConfig":"47"},{"size":1625,"mtime":1610626508980,"results":"50","hashOfConfig":"47"},{"size":1159,"mtime":1610398032382,"results":"51","hashOfConfig":"47"},{"size":3167,"mtime":1610397836831,"results":"52","hashOfConfig":"47"},{"size":2118,"mtime":1610397807852,"results":"53","hashOfConfig":"47"},{"size":397,"mtime":1610399239396,"results":"54","hashOfConfig":"47"},{"size":243,"mtime":1610399037769,"results":"55","hashOfConfig":"47"},{"size":387,"mtime":1610398986820,"results":"56","hashOfConfig":"47"},{"size":1117,"mtime":1610397739230,"results":"57","hashOfConfig":"47"},{"size":401,"mtime":1610397603697,"results":"58","hashOfConfig":"47"},{"size":503,"mtime":1610398010618,"results":"59","hashOfConfig":"47"},{"size":2119,"mtime":1610397642415,"results":"60","hashOfConfig":"47"},{"size":1229,"mtime":1610399009993,"results":"61","hashOfConfig":"47"},{"size":251,"mtime":1610399142338,"results":"62","hashOfConfig":"47"},{"size":1993,"mtime":1610397874811,"results":"63","hashOfConfig":"47"},{"size":729,"mtime":1610398952631,"results":"64","hashOfConfig":"47"},{"size":1204,"mtime":1610399104404,"results":"65","hashOfConfig":"47"},{"size":6044,"mtime":1610399770445,"results":"66","hashOfConfig":"47"},{"size":300,"mtime":1610350098458,"results":"67","hashOfConfig":"47"},{"size":661,"mtime":1610397915385,"results":"68","hashOfConfig":"47"},{"size":3589,"mtime":1610398471134,"results":"69","hashOfConfig":"47"},{"size":3650,"mtime":1610398445145,"results":"70","hashOfConfig":"47"},{"size":1450,"mtime":1610397964802,"results":"71","hashOfConfig":"47"},{"size":1436,"mtime":1610397939046,"results":"72","hashOfConfig":"47"},{"size":1341,"mtime":1610398926031,"results":"73","hashOfConfig":"47"},{"size":1027,"mtime":1610398842335,"results":"74","hashOfConfig":"47"},{"size":306,"mtime":1610398084487,"results":"75","hashOfConfig":"47"},{"size":7511,"mtime":1610398497850,"results":"76","hashOfConfig":"47"},{"size":8257,"mtime":1610398537659,"results":"77","hashOfConfig":"47"},{"size":1848,"mtime":1610399079252,"results":"78","hashOfConfig":"47"},{"size":2974,"mtime":1610398695663,"results":"79","hashOfConfig":"47"},{"size":1060,"mtime":1610398362039,"results":"80","hashOfConfig":"47"},{"size":1183,"mtime":1610398245902,"results":"81","hashOfConfig":"47"},{"size":756,"mtime":1610398745305,"results":"82","hashOfConfig":"47"},{"size":685,"mtime":1610398764078,"results":"83","hashOfConfig":"47"},{"size":720,"mtime":1610398782607,"results":"84","hashOfConfig":"47"},{"size":4001,"mtime":1610397703424,"results":"85","hashOfConfig":"47"},{"size":826,"mtime":1610398716967,"results":"86","hashOfConfig":"47"},{"size":2400,"mtime":1610398341283,"results":"87","hashOfConfig":"47"},{"size":1035,"mtime":1610398319194,"results":"88","hashOfConfig":"47"},{"size":2341,"mtime":1610398808033,"results":"89","hashOfConfig":"47"},{"size":1411,"mtime":1610398224602,"results":"90","hashOfConfig":"47"},{"size":1074,"mtime":1610398203011,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"6vpnwr",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"94"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"94"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"94"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"94"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"94"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\index.js",[],["199","200"],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\App.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\layout\\Navbar.js",["201"],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\auth\\Login.js",["202"],"import React, { Fragment, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { name, email, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  // Redirect if logged in\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard'></Redirect>;\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <section className='container'>\r\n        <h1 className='large text-primary'>Sign In</h1>\r\n        <p className='lead'>\r\n          <i className='fas fa-user'></i> Sign Into Your Account\r\n        </p>\r\n        <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n          <div className='form-group'>\r\n            <input\r\n              type='email'\r\n              placeholder='Email Address'\r\n              name='email'\r\n              value={email}\r\n              onChange={(e) => onChange(e)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='password'\r\n              placeholder='Password'\r\n              name='password'\r\n              value={password}\r\n              onChange={(e) => onChange(e)}\r\n              minLength='6'\r\n            />\r\n          </div>\r\n          <input type='submit' className='btn btn-primary' value='Login' />\r\n        </form>\r\n        <p className='my-1'>\r\n          Do not have an account? <Link to='/register'>Sign Up</Link>\r\n        </p>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { login })(Login);","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\store.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\reducers\\index.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\reducers\\alert.js",["203"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}",["204","205"],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\actions\\types.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\actions\\alert.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\actions\\auth.js",["206"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  LOGOUT_FAIL,\r\n  CLEAR_PROFILE,\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n//load User\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n//Register user\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/JSON',\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//Login user\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/JSON',\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n//LOGOUT /clear profile\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: CLEAR_PROFILE,\r\n  });\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\reducers\\auth.js",["207"],"import {\r\n    REGISTER_FAIL,\r\n    REGISTER_SUCCESS,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED,\r\n  } from '../actions/types';\r\n  \r\n  const initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null,\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case USER_LOADED:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: true,\r\n          loading: false,\r\n          user: payload,\r\n        };\r\n      case REGISTER_SUCCESS:\r\n      case LOGIN_SUCCESS:\r\n        localStorage.setItem('token', payload.token);\r\n        return {\r\n          ...state,\r\n          ...payload,\r\n          isAuthenticated: true,\r\n          loading: false,\r\n        };\r\n      case REGISTER_FAIL:\r\n      case AUTH_ERROR:\r\n      case LOGIN_FAIL:\r\n      case LOGOUT:\r\n      case ACCOUNT_DELETED:\r\n        localStorage.removeItem('token');\r\n        return {\r\n          ...state,\r\n          token: null,\r\n          isAuthenticated: false,\r\n          loading: false,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\dashboard\\Dashboard.js",["208"],"import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport { deleteAccount, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n  deleteAccount,\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, []);\r\n\r\n  return loading && profile === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n\r\n          <div className='my-2'>\r\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n              <i className='fas fa-user-minus'></i>Delete My Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You have not yet setup a profile, please add some info</p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            {' '}\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\r\n  Dashboard\r\n);","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\routing\\PrivateRoute.js",["209"],"import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { auth } from '../../reducers/auth';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  auth: { isAuthenticated, loading },\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      !isAuthenticated && !loading ? (\r\n        <Redirect to='/login'></Redirect>\r\n      ) : (\r\n        <Component {...props}></Component>\r\n      )\r\n    }\r\n  ></Route>\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\reducers\\profile.js",["210","211"],"import {\r\n    PROFILE_ERROR,\r\n    GET_PROFILE,\r\n    CLEAR_PROFILE,\r\n    UPDATE_PROFILE,\r\n    GET_PROFILES,\r\n    GET_REPOS,\r\n  } from '../actions/types';\r\n  import PropTypes from 'prop-types';\r\n  \r\n  const initialState = {\r\n    profile: null,\r\n    profiles: [],\r\n    repos: [],\r\n    loading: true,\r\n    error: {},\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case GET_PROFILE:\r\n      case UPDATE_PROFILE:\r\n        return {\r\n          ...state,\r\n          profile: payload,\r\n          loading: false,\r\n        };\r\n      case GET_PROFILES:\r\n        return {\r\n          ...state,\r\n          profiles: payload,\r\n          loading: false,\r\n        };\r\n      case PROFILE_ERROR:\r\n        return {\r\n          ...state,\r\n          error: payload,\r\n          loading: false,\r\n        };\r\n      case CLEAR_PROFILE:\r\n        return {\r\n          ...state,\r\n          profile: null,\r\n          repos: [],\r\n          loading: false,\r\n        };\r\n      case GET_REPOS:\r\n        return {\r\n          ...state,\r\n          repos: payload,\r\n          loading: false,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\actions\\profile.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\layout\\spinner.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile-forms\\AddExperience.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile-forms\\AddEducation.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\dashboard\\Experience.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\dashboard\\Education.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profiles\\Profiles.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profiles\\ProfileItem.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\layout\\Spinner.js",["212"],"  \r\nimport React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => {\r\n  return (\r\n    <Fragment>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n        alt={'Loading...'}\r\n      />\r\n    </Fragment>\r\n  );\r\n};","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile-forms\\EditProfile.js",["213"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n      githubusername:\r\n        loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n    });\r\n  }, [loading, getCurrentProfile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Edit Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user' /> Add some changes to your profile\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>\r\n            Give us an idea of where you are at in your career\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own company or one you work for\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Could be your own or a company website\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. Boston, MA)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your\r\n            username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x' />\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\reducers\\post.js",["214"],"import {\r\n    ADD_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT,\r\n    DELETE_POSTS,\r\n    GET_POSTS,\r\n    GET_POST,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n  } from '../actions/types';\r\n  \r\n  const initialState = {\r\n    posts: [],\r\n    post: null,\r\n    loading: true,\r\n    error: {},\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case GET_POSTS:\r\n        return {\r\n          ...state,\r\n          posts: payload,\r\n          loading: false,\r\n        };\r\n      case GET_POST:\r\n        return {\r\n          ...state,\r\n          post: payload,\r\n          loading: false,\r\n        };\r\n      case ADD_POST:\r\n        return {\r\n          ...state,\r\n          posts: [payload, ...state.posts],\r\n          loading: false,\r\n        };\r\n      case DELETE_POSTS:\r\n        return {\r\n          ...state,\r\n          posts: state.posts.filter((post) => post._id !== payload),\r\n          loading: false,\r\n        };\r\n      case POST_ERROR:\r\n        return {\r\n          ...state,\r\n          error: payload,\r\n          loading: false,\r\n        };\r\n      case UPDATE_LIKES:\r\n        return {\r\n          ...state,\r\n          posts: state.posts.map((post) =>\r\n            post._id === payload.id ? { ...post, likes: payload.likes } : post\r\n          ),\r\n          loading: false,\r\n        };\r\n      case ADD_COMMENT:\r\n        return {\r\n          ...state,\r\n          post: { ...state.post, comments: payload },\r\n          loading: false,\r\n        };\r\n      case REMOVE_COMMENT:\r\n        return {\r\n          ...state,\r\n          post: {\r\n            ...state.post,\r\n            comments: state.post.comments.filter(\r\n              (comment) => comment._id !== payload\r\n            ),\r\n            loading: false,\r\n          },\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile\\Profile.js",["215"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfileById } from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\n\r\nconst Profile = ({\r\n  getProfileById,\r\n  profile: { profile, loading },\r\n  auth,\r\n  match,\r\n}) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null || loading === true ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to='/profiles' className='btn btn-light'>\r\n            Back to Profile\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to='/edit-profile' className='btn btn-dark'>\r\n                Edit Profile\r\n              </Link>\r\n            )}\r\n          <div className='profile-grid my-1'>\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n            <div className='profile-exp bg-white p-2'>\r\n              <h2 className='text-primary'>Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map((experience) => (\r\n                    <ProfileExperience\r\n                      key={experience._id}\r\n                      experience={experience}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No Experience</h4>\r\n              )}\r\n            </div>\r\n\r\n            <div className='profile-edu bg-white p-2'>\r\n              <h2 className='text-primary'>Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map((education) => (\r\n                    <ProfileEducation\r\n                      key={education._id}\r\n                      education={education}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No Experience</h4>\r\n              )}\r\n            </div>\r\n\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername} />\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\posts\\Posts.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\post\\Post.js",["216"],"import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from '../posts/PostItem';\r\nimport { getPost } from '../../actions/post';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\n\r\nconst Post = ({ getPost, posts: { post, loading }, match }) => {\r\n  useEffect(() => {\r\n    getPost(match.params.id);\r\n  }, [getPost]);\r\n  return loading || post === null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <Link to='/posts' className='btn'>\r\n        Back To Posts\r\n      </Link>\r\n      <PostItem post={post} showActions={false} />\r\n      <CommentForm postId={post._id} />\r\n      <div className='comments'>\r\n        {post.comments.map((comment) => (\r\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n        ))}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  posts: state.posts,\r\n});\r\nexport default connect(mapStateToProps, { getPost })(Post);","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile\\ProfileEducation.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile\\ProfileExperience.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile\\ProfileGithub.js",["217","218","219"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos(username)]);\r\n\r\n  return <div></div>;\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.object.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\actions\\post.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile\\ProfileAbout.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\posts\\PostItem.js",["220"],"import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'react-moment';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { addLike, deletePost, removeLike } from '../../actions/post';\r\n\r\nconst PostItem = ({\r\n  auth,\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions,\r\n}) => (\r\n  <div className='post bg-white p-1 my-1'>\r\n    <div>\r\n      <Link to={`/profile/user/${user}`}>\r\n        <img className='round-img' src={avatar} alt='' />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className='my-1'>{text}</p>\r\n      <p className='post-date'>\r\n        Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n      </p>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n          <button\r\n            onClick={(e) => addLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-up'> </i>\r\n            {likes && likes.length > 0 && <span> {likes.length}</span>}\r\n          </button>\r\n          <button\r\n            onClick={(e) => removeLike(_id)}\r\n            type='button'\r\n            className='btn btn-light'\r\n          >\r\n            <i className='fas fa-thumbs-down'> </i>\r\n          </button>\r\n          <Link to={`/posts/${_id}`} className='btn btn-primary'>\r\n            Discussion{' '}\r\n            {comments && comments.length > 0 && (\r\n              <span className='comment-count'> {comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={(e) => deletePost(_id)}\r\n              type='button'\r\n              className='btn btn-danger'\r\n            >\r\n              <i className='fas fa-times'></i>\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true,\r\n};\r\nPostItem.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\posts\\PostForm.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\profile\\ProfileTop.js",[],"C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\post\\CommentItem.js",["221"],"import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { deleteComment } from '../../actions/post';\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment,\r\n}) => {\r\n  return (\r\n    <div className='post bg-white p-1 my-1'>\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          <img className='round-img' src={avatar} alt='' />\r\n          <h4>{name}</h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p className='my-1'>{text}</p>\r\n        <p className='post-date'>\r\n          Posted on <Moment format='YYYY/MM/DD'>{date}</Moment>\r\n        </p>\r\n        {!auth.loading && user === auth.user._id && (\r\n          <button\r\n            onClick={(e) => deleteComment(postId, _id)}\r\n            className='btn btn-danger'\r\n          >\r\n            <i className='fas fa-times'> </i>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);","C:\\Users\\Chinni\\Desktop\\DEVCONNECTORS\\client\\src\\components\\post\\CommentForm.js",[],{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","severity":1,"message":"227","line":5,"column":10,"nodeType":"228","messageId":"229","endLine":5,"endColumn":18},{"ruleId":"226","severity":1,"message":"230","line":13,"column":11,"nodeType":"228","messageId":"229","endLine":13,"endColumn":15},{"ruleId":"231","severity":1,"message":"232","line":4,"column":1,"nodeType":"233","endLine":15,"endColumn":2},{"ruleId":"222","replacedBy":"234"},{"ruleId":"224","replacedBy":"235"},{"ruleId":"226","severity":1,"message":"236","line":11,"column":3,"nodeType":"228","messageId":"229","endLine":11,"endColumn":14},{"ruleId":"231","severity":1,"message":"232","line":19,"column":3,"nodeType":"233","endLine":54,"endColumn":4},{"ruleId":"237","severity":1,"message":"238","line":19,"column":6,"nodeType":"239","endLine":19,"endColumn":8,"suggestions":"240"},{"ruleId":"226","severity":1,"message":"241","line":5,"column":10,"nodeType":"228","messageId":"229","endLine":5,"endColumn":14},{"ruleId":"226","severity":1,"message":"242","line":9,"column":10,"nodeType":"228","messageId":"229","endLine":9,"endColumn":19},{"ruleId":"231","severity":1,"message":"232","line":19,"column":3,"nodeType":"233","endLine":58,"endColumn":4},{"ruleId":"231","severity":1,"message":"243","line":5,"column":1,"nodeType":"233","endLine":15,"endColumn":3},{"ruleId":"237","severity":1,"message":"244","line":48,"column":6,"nodeType":"239","endLine":48,"endColumn":34,"suggestions":"245"},{"ruleId":"231","severity":1,"message":"232","line":19,"column":3,"nodeType":"233","endLine":80,"endColumn":4},{"ruleId":"237","severity":1,"message":"246","line":21,"column":6,"nodeType":"239","endLine":21,"endColumn":22,"suggestions":"247"},{"ruleId":"237","severity":1,"message":"246","line":14,"column":6,"nodeType":"239","endLine":14,"endColumn":15,"suggestions":"248"},{"ruleId":"226","severity":1,"message":"249","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":15},{"ruleId":"237","severity":1,"message":"250","line":10,"column":6,"nodeType":"239","endLine":10,"endColumn":32,"suggestions":"251"},{"ruleId":"237","severity":1,"message":"252","line":10,"column":7,"nodeType":"253","endLine":10,"endColumn":31},{"ruleId":"226","severity":1,"message":"254","line":4,"column":8,"nodeType":"228","messageId":"229","endLine":4,"endColumn":14},{"ruleId":"226","severity":1,"message":"255","line":1,"column":17,"nodeType":"228","messageId":"229","endLine":1,"endColumn":25},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"no-unused-vars","'loadUser' is defined but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["256"],["257"],"'LOGOUT_FAIL' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["258"],"'auth' is defined but never used.","'PropTypes' is defined but never used.","Assign arrow function to a variable before exporting as module default","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.",["259"],"React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["260"],["261"],"'Spinner' is defined but never used.","React Hook useEffect has missing dependencies: 'getGithubRepos' and 'username'. Either include them or remove the dependency array. If 'getGithubRepos' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["262"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'moment' is defined but never used.","'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"273","text":"274"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"275","text":"276"},"Update the dependencies array to be: [getProfileById, match.params.id]",{"range":"277","text":"278"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"279","text":"280"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"281","text":"282"},[597,599],"[getCurrentProfile]",[1700,1728],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",[674,690],"[getProfileById, match.params.id]",[513,522],"[getPost, match.params.id]",[344,370],"[getGithubRepos, username]"]